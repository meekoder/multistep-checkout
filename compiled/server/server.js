const express = require('express');
const app = express();
const parser = require('body-parser');
const path = require('path');
const cors = require('cors');
const db = require('./db');
const userRouter = require('./routes/user-router');
const publicDir = path.join(__dirname, '/../compiled');
const port = 3000;

app.use(parser.urlencoded({ extended: true }));
app.use(cors());
app.use(parser.json());

db.on('error', console.error.bind(console, 'MongoDB connection error:'));

app.use(express.static(publicDir));
app.get('*', (req, res) => {
  res.redirect('/');
});

app.use('/api', userRouter);

app.listen(port, () => console.log(`Server running on port ${port}`));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhcHAiLCJwYXJzZXIiLCJwYXRoIiwiY29ycyIsImRiIiwidXNlclJvdXRlciIsInB1YmxpY0RpciIsImpvaW4iLCJfX2Rpcm5hbWUiLCJwb3J0IiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsInN0YXRpYyIsImdldCIsInJlcSIsInJlcyIsInJlZGlyZWN0IiwibGlzdGVuIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVQyxRQUFRLFNBQVIsQ0FBaEI7QUFDQSxNQUFNQyxNQUFNRixTQUFaO0FBQ0EsTUFBTUcsU0FBU0YsUUFBUSxhQUFSLENBQWY7QUFDQSxNQUFNRyxPQUFPSCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1JLE9BQU9KLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUssS0FBS0wsUUFBUSxNQUFSLENBQVg7QUFDQSxNQUFNTSxhQUFhTixRQUFRLHNCQUFSLENBQW5CO0FBQ0EsTUFBTU8sWUFBWUosS0FBS0ssSUFBTCxDQUFVQyxTQUFWLEVBQXFCLGNBQXJCLENBQWxCO0FBQ0EsTUFBTUMsT0FBTyxJQUFiOztBQUVBVCxJQUFJVSxHQUFKLENBQVFULE9BQU9VLFVBQVAsQ0FBa0IsRUFBQ0MsVUFBVSxJQUFYLEVBQWxCLENBQVI7QUFDQVosSUFBSVUsR0FBSixDQUFRUCxNQUFSO0FBQ0FILElBQUlVLEdBQUosQ0FBUVQsT0FBT1ksSUFBUCxFQUFSOztBQUVBVCxHQUFHVSxFQUFILENBQU0sT0FBTixFQUFlQyxRQUFRQyxLQUFSLENBQWNDLElBQWQsQ0FBbUJGLE9BQW5CLEVBQTRCLDJCQUE1QixDQUFmOztBQUVBZixJQUFJVSxHQUFKLENBQVFaLFFBQVFvQixNQUFSLENBQWVaLFNBQWYsQ0FBUjtBQUNBTixJQUFJbUIsR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUN6QkEsTUFBSUMsUUFBSixDQUFhLEdBQWI7QUFDRCxDQUZEOztBQUlBdEIsSUFBSVUsR0FBSixDQUFRLE1BQVIsRUFBZ0JMLFVBQWhCOztBQUVBTCxJQUFJdUIsTUFBSixDQUFXZCxJQUFYLEVBQWlCLE1BQU1NLFFBQVFTLEdBQVIsQ0FBYSwwQkFBeUJmLElBQUssRUFBM0MsQ0FBdkIiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpXG5jb25zdCBkYiA9IHJlcXVpcmUoJy4vZGInKVxuY29uc3QgdXNlclJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL3VzZXItcm91dGVyJylcbmNvbnN0IHB1YmxpY0RpciA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29tcGlsZWQnKVxuY29uc3QgcG9ydCA9IDMwMDBcblxuYXBwLnVzZShwYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IHRydWV9KSlcbmFwcC51c2UoY29ycygpKVxuYXBwLnVzZShwYXJzZXIuanNvbigpKVxuXG5kYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ01vbmdvREIgY29ubmVjdGlvbiBlcnJvcjonKSlcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwdWJsaWNEaXIpKTtcbmFwcC5nZXQoJyonLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnJlZGlyZWN0KCcvJylcbn0pXG5cbmFwcC51c2UoJy9hcGknLCB1c2VyUm91dGVyKTtcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YCkpXG4iXX0=